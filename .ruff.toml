# .ruff.toml configuration file

line-length = 120
target-version = "py311"


exclude = [
    ".git",
    "__pycache__",
    "alembic",
    "db/first_fill",
]

[lint]
select = [
    "A", # (flake8-builtins) Check for python builtins being used as variables or parameters
    "B", # (flake8-bugbear) Bugbear finding likely bugs and design problems in your program
    "C4", # (flake8-comprehensions) Checks for common mistakes in comprehensions
    "E", # (pycodestyle) PEP8 errors
    "F", # (pyflakes) analyzes programs and detects various errors
    "G", # (flake8-logging-format) Validate (lack of) logging format strings
    'I', # (flake8-import-order) Check import order
    "S", # (flake8-bandit) Security
    "W", # (pycodestyle) PEP8 warnings
    "C90", # (McCabe) Checks for functions with a high McCabe complexity.
    "PLE", # (pylint) error subset
    "FAST003", # (FastAPI) unused path parameter
    "ASYNC", # (flake8-async) Ð¡hecks for async functions
    "UP017", # (pyupgrade) Checks for uses of datetime.timezone.utc
    "UP045", # (pyupgrade) Check for typing.Optional annotations that can be rewritten based on PEP 604 syntax (object | None)
    "FURB", # (furb) A tool for refurbishing and modernizing Python codebases
]

# flake bugbear and ruff specigfic rules
extend-select = [
    "B9",
    "RUF006", # https://docs.astral.sh/ruff/rules/asyncio-dangling-task/
    "RUF008", # Checks for mutable default values in dataclass attributes
    "RUF017", # https://docs.astral.sh/ruff/rules/quadratic-list-summation/
    "RUF034", # Checks for useless if-else conditions with identical arms
]


ignore = [
    "A004", # an import statement is shadowing a Python builtin
    "A005", # a module is shadowing a Python builtin module
    "B011", # do not assert False
    "B904", # within an `except` clause, raise exceptions with `raise ... from err`
    "E501", # line too long (using B950 instead - more flexible)
    "E731", # do not assign a lambda expression, use a def
]

[lint.mccabe]
max-complexity = 20


[lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports

# formatting rules
[format]
quote-style = "preserve"        # preserve the original quote style
docstring-code-format = true    # format code in docstrings
